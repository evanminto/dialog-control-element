(()=>{class t extends HTMLElement{#t=null;#e="toggle";#i=!1;static observedAttributes=["target","target-action","light-dismiss"];attributeChangedCallback(t,e,i){"target"===t&&(this.#t=i||null),"target-action"===t&&i&&["toggle","show","hide"].includes(i)&&(this.#e=i),"light-dismiss"===t&&(this.#i=void 0!==i)}get target(){return this.#t}set target(t){this.#t=t,null===t?this.removeAttribute("target"):this.setAttribute("target",t)}get targetAction(){return this.#e}set targetAction(t){t&&(this.#e=t,null===t?this.removeAttribute("target-action"):this.setAttribute("target-action",t))}get lightDismiss(){return this.#i}set lightDismiss(t){this.#i=!!t,this.#i?this.setAttribute("light-dismiss",""):this.removeAttribute("light-dismiss")}get targetElement(){let t=this.getRootNode(),e=this.target?t.getElementById(this.target):null;return e instanceof HTMLDialogElement?e:null}connectedCallback(){this.addEventListener("click",this.#s)}disconnectedCallback(){this.removeEventListener("click",this.#s)}#l(){return this.dispatchEvent(new Event("modal-control-before-toggle",{cancelable:!0}))}#n(){return this.dispatchEvent(new Event("modal-control-toggle"))}#s=t=>{let e=t.target;if(!e.closest('button, input[type="button"]'))return;let{targetElement:i}=this;if(i)switch(this.targetAction){case"show":!i.open&&this.#l()&&(i.showModal(),this.lightDismiss&&this.#o(i),this.#n());break;case"hide":i.open&&this.#l()&&(i.close(),this.#n());break;case"toggle":this.#l()&&(i.open?i.close():(i.showModal(),this.lightDismiss&&this.#o(i)),this.#n())}};#h=t=>{let{targetElement:e}=this;e&&!function(t,e){let{clientX:i,clientY:s}=t,l=t.target,{x:n,y:o,width:h,height:g}=e.getBoundingClientRect();return e===l?i>=n&&i<=n+h&&s>=o&&s<=o+g:e.contains(l)}(t,e)&&this.#l()&&(e.close(),this.#n())};#g=t=>{let{targetElement:e}=this;e&&!e.contains(t.target)&&this.#l()&&(e.close(),this.#n())};#a=t=>{t.target.removeEventListener("click",this.#h),t.target.getRootNode().removeEventListener("click",this.#g),t.target.removeEventListener("close",this.#a)};#o(t){t&&(t.addEventListener("click",this.#h),setTimeout(()=>{t.getRootNode().addEventListener("click",this.#g),t.addEventListener("close",this.#a)},0))}}((e="modal-control")=>{"customElements"in window&&customElements.define(e,t)})()})();
//# sourceMappingURL=global.js.map
